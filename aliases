###########
# aliases #
###########

# Unix
alias tlf="tail -f"
alias ln='ln -v'
alias mkdir='mkdir -p'
alias grep='grep --color=auto'
alias cp='cp -r'
alias ...='../..'
alias l='ls -lah'
alias ll='ls -lh'
alias lh='ls -Alh'
alias -g G='| grep'
alias -g M='| less'
alias -g L='| wc -l'
alias -g ONE="| awk '{ print \$1}'"
alias e="$EDITOR"
alias v="$VISUAL"
alias sz="source ~/.zshrc"
alias rcom="cd ~/procore/app/assets/javascripts/react_components"
alias pcom="cd ~/procore/app/assets/javascripts/react_components/procore_components"
alias rs="bin/rails s -b 0.0.0.0"
alias bs="bin/rails s -b 0.0.0.0 | grep -E 'GET|POST|Rendered|Listening|scss'"

# tmux
alias tmux='tmux -2'
alias tma='tmux att -t'
alias tmls='tmux ls'

# git

# Bundler
alias be="bundle exec"

# Tests and Specs

# Rubygems
alias gi="gem install"
alias giv="gem install -v"

# Rails
alias migrate="rake db:migrate db:rollback && rake db:migrate db:test:prepare"

#############
# functions #
#############

# vimo($grepfile) { grep -Zril '$grepfile' app/ | xargs -0 sh -c 'vim -O "$@" < /dev/tty' vim }
 
# copy the database yml and paste it in your config 
cpdb()
{
  #find all places where there is a database.yml
  local database_locs="find ~/ -maxdepth 5 -path '*config/database.yml*' | sed 's/home//;s/vagrant//;s/\///;s/\///;s/\///'"

  #set second arg to procore if not defined
  local dir=${2:-procore}

  #check and see if directroy exists
  if [ ! -d ~/$dir ]; then
    echo "$dir does not exist, try one of these:"
    echo "--------------------------------------"
    eval $database_locs
    return
  fi

  #check if database file exists and cp it
  if [ $1 == 'local' ] || [ $1 == 'office' ]; then
    cp ~/.database_configs/database_$1.yml ~/$dir/config/database.yml
    echo "now using your [$1] database file in the [$dir] directory"
  else
    echo "specify either [local] or [office], to change database file"
  fi
}
