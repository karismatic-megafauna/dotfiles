###########
# aliases #
###########

# general
alias cp='cp -iv'
alias mkdir='mkdir -v'
alias ls='ls -hFG'
alias mv='mv -iv'
alias ln='ln -v'
alias rm='rm -v'
alias p='ps -a'
alias back='cd -'
alias path='pretty_path'
alias e="$EDITOR"
alias v="$VISUAL"
alias sz="source ~/.zshrc"
alias tree="tree -CI node_modules"
alias t="tree -CI node_modules"
alias sp="spotify"

# Tmux
alias tmux="tmux -2"

# rcm
alias rcup='rcup -v'
alias rcdn='rcdn -v'
alias mkrc='mkrc -v'

#############
# functions #
# TODO: move to own file and source it?
#############

# Copy Database
# Useful for switching between different database.yml's
cpdb()
{
  # SETUP:
  # `mkdir ~/.database_configs`
  # `touch database_local.yml database_office.yml database_remote_office.yml`
  # each of these should have to correct configs
  #
  # USAGE:
  # on your virtual machine do this:
  # cpdb -l for you own local setup
  # cpdb -r for remote office (then ssh in)
  # cpdb -o for the office db while in the office
  #
  # Enjoy!
  #find all places where there is a database.yml
  local database_locs="find ~/ -maxdepth 5 -path '*config/database.yml*' | sed 's/home//;s/vagrant//;s/\///;s/\///;s/\///'"

  #set second arg to procore if not defined
  local dir=${2:-procore}

  #check and see if directroy exists
  if [ ! -d ~/$dir ]; then
    echo "$dir does not exist, try one of these:"
    echo "--------------------------------------"
    eval $database_locs
    return
  fi

  #check if database file exists and cp it
  if [ $1 == '-l' ]; then
    cp ~/.database_configs/database_local.yml ~/$dir/config/database.yml
    echo "now using your [local] database file in the [$dir] directory"
  elif [ $1 == '-o' ]; then
    cp ~/.database_configs/database_office.yml ~/$dir/config/database.yml
    echo "now using your [office] database file in the [$dir] directory"
  elif [ $1 == '-r' ]; then
    cp ~/.database_configs/database_remote_office.yml ~/$dir/config/database.yml
    echo "now using your [remote office] database file in the [$dir] directory"
    echo "you will need to run 'ssh yourname@db1.office.procore' to set this up"
  else
    echo "specify [-l], [-r] or [-o], to change database file"
  fi
}

# Generates a Todo List with a date as the name
# adds all args as a note
# note()
# {
#   # vars
#   local date_name="$(date '+%Y-%m-%d')"
#   local file_path="$HOME/notes/${date_name}.md"
#   local new_note="$*"

#   # if file exists, don't print title
#   if [ ! -f "$file_path" ]; then
#     echo "# Daily Objectives" >> "$file_path"
#     echo "- [ ] shoot a bow" >> "$file_path"
#     echo "- [ ] exercise" >> "$file_path"
#     echo "- [ ] code a thing" >> "$file_path"
#     echo "- [ ] write a story" >> "$file_path"
#     echo "- [ ] read a book" >> "$file_path"
#     echo "- [ ] speak a foreign language" >> "$file_path"
#     echo " " >> "$file_path"
#     echo "# Personal Notes" >> "$file_path"
#     echo "- [ ] get home before 6" >> "$file_path"
#     echo " " >> "$file_path"
#     echo "# Work Notes" >> "$file_path"
#     echo "- [ ] get in before 8" >> "$file_path"
#   fi

#   # add args as notes
#   echo "- [ ] $new_note" >> "$file_path"
# }
