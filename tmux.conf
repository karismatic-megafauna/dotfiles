# URLs to read:
#   http://blog.yjl.im/2009/11/migrating-to-tmux-from-gnuscreen.html
#   http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/
#   http://www.dayid.org/os/notes/tm.html
#
# Other sample tmux.conf files
#   http://www.mindfuzz.net/?p=178
#
# -----------------------------------------------------------------------------
# Plugins
# -----------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# -----------------------------------------------------------------------------
# Global settings
# -----------------------------------------------------------------------------

# Set prefix key to Ctrl-a
unbind-key C-b
set-option -g prefix C-a

# send the prefix to client inside window
bind-key C-a send-prefix

# listen for activity on all windows
set -g bell-action any

# start window indexing at 1
set -g base-index 1

# xterm-style function key sequences
setw -g xterm-keys on

# enable wm window titles
set -g set-titles on

# enable mouse mode
set -g mouse on

# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------

# reload settings
bind-key R source-file ~/.tmux.conf

# detach client
bind-key d detach
bind-key C-d detach

# choose a client to detach
bind-key D choose-client

# choose window/session
bind-key "'" choose-window
bind-key '"' choose-session


# -----------------------------------------------------------------------------
# Copy & Paste
# -----------------------------------------------------------------------------

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
bind -Tcopy-mode-vi 'Enter' send -X begin-selection
bind-key -Tcopy-mode-vi 'Enter' send -X copy-pipe "reattach-to-user-namespace pbcopy"

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_bg '#ff761a'

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer

# -----------------------------------------------------------------------------
# Screen-like key bindings
# -----------------------------------------------------------------------------

# set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g allow-rename off
set-window-option -g automatic-rename off

# new window
bind-key C-c new-window -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# next
bind-key -r Space next-window

# title (default key in tmux is ',')
# bind-key A command-prompt "rename-window %%"

# quit
bind-key \ confirm-before kill-server

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
bind-key r refresh-client

# alternatively, use better mnemonics for horizontal/vertical splits
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"

# resize panes like vim
bind-key -r H resize-pane -L 3
bind-key -r L resize-pane -R 3
bind-key -r K resize-pane -U 3
bind-key -r J resize-pane -D 3

# -----------------------------------------------------------------------------
# Status Bar
# -----------------------------------------------------------------------------

# use vi-style key bindings in the status line
set -g status-keys vi
# set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)

# darken active pane to clarify focus
set -g window-style        bg='#2a2a2a'
set -g window-active-style bg='#1a1a1a'

# smart pane switching with awareness of vim splits
# makes ctrl-j and ctrl-k navigate fzf search results when fzf active in pane
# providing the same behavior as ctrl-j and ctrl-k when navigating ctrl-p results
# inside vim.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Colors and statusline scheme from falcon
# Pulled from falcon but getting errors with the `status-bg` being ""
# source-file ~/.vim/plugged/falcon/tmux/falcon.tmux.conf
# status
set -g status-justify "left"
set -g status "on"
set -g status-bg "#121212"

# messages
set -g message-style fg="#b4b4b9",bg="#020221"
set -g message-command-style fg="#99a4bc",bg="#020221"

# panes
set -g pane-active-border-style fg="#57575e",bg="#020221"
set -g pane-border-style fg="#57575e",bg="#151521"

# put a line above the status
set -g pane-border-status bottom
set -g pane-border-format '─'

# selection
set -g mode-style fg="#36363a",bg="#ddcfbf"

# active / inactive pane bg
set -g window-style bg="#151521"
set -g window-active-style bg="#020221"

# have the sidebar use "tree"
set -g @sidebar-tree-command 'tree -C'

# window status
setw -g window-status-style fg="#b4b4b9",none
setw -g window-status-activity-style fg="magenta",bg="#36363a",none
setw -g window-status-separator ""
setw -g window-status-style bg=black
setw -g window-status-format "#[fg=#787882,bg=#020221] #I:#W "
# setw -g window-status-current-format "#[fg=white,bg=#020221] #I#[fg=#787882]:#[fg=yellow]#{?window_zoomed_flag,#[fg=black](,}#W#{?window_zoomed_flag,#[fg=black]),} "
setw -g window-status-current-format "#[fg=white,bg=#020221] #I#[fg=#787882]:#[fg=yellow]#{?window_zoomed_flag,(,}#W#{?window_zoomed_flag,),} "

set -g status-style bg="default",bright
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left "#[fg=white] #S #[fg=#57583e]│ "

set -g status-right '#{prefix_highlight} #[fg=#718e3f] #(node -v) #[fg=#ff3600] v#(ruby -v | sed -E "s/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/")  #{cpu_fg_color}CPU: #{cpu_icon} #{cpu_percentage}'
# set -g status-right "#[fg=green] #(node -v) #[fg=red] #(ruby -v | sed -E 's/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/') #[fg=#787882]│ #[fg=white]%d/%m/%Y %H:%M "


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
